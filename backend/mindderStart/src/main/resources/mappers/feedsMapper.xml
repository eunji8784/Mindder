<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.mindder.feeds.model.mapper.FeedsMapper">

	<!-- 공개여부 -> 어캐해야하지..? -->
	<!-- 공개여부 -> default값은 공개로 -->
	<insert id="writeFeed" parameterType="FeedsDto">
		insert into mainfeed 
		(update_date, update_time,is_public, main_text, normal_tag,is_deleted,user_idx,emote_idx,emote_color_idx,feed_hit)
		values(curdate(), curtime(), #{isPublic} , #{mainText}, #{normalTag}, 0, #{userIdx}, #{emoteIdx},#{emoteColorIdx},0)		
	</insert>
	
	<!-- 피드글 삭제-->
	<!-- feedIdx가 있는 피드 좋아요, 피드 스크랩, 피드에 달린 코멘트 -> is_delete true로 변경  -->
	<update id="deleteMainFeed" parameterType="int">
	update  mainfeed 
	set is_deleted = 1
	where feed_idx = #{feedIdx};
	</update>
	
	<update id="deleteFeedLike" parameterType="int">
	update  feedlike 
	set is_deleted = 1
	where feed_idx = #{feedIdx};
	</update>
	
	<update id="deleteFeedComment" parameterType="int">
	update feedcomment 
	set is_deleted = 1
	where feed_idx = #{feedIdx};
	</update>
	
	<update id="deleteFeedScrap" parameterType="int">
	update feedscrap 
	set is_deleted = 1
	where feed_idx = #{feedIdx};
	</update>
	
	<!-- 피드글 수정-->
	<update id ="modifyFeed" parameterType="FeedsDto">
	update mainfeed 
	set is_public = #{isPublic}, main_text=#{mainText}, normal_tag=#{normalTag}
	where feed_idx=#{feedIdx} and is_deleted!='1'
	</update>

	<!-- 피드글 상세보기 -->
	<select id="getFeed" parameterType="int" resultMap="com.ssafy.resultmaps.feed">
	<!-- 이미지 URL 은 제외한 코드 -->
	select f.feed_idx, u.nickname,
	 f.update_date,
   	(select count(*) from feedcomment c, mainfeed f where c.feed_idx= f.feed_idx and c.feed_idx=#{feedIdx})as 'comment_count',
   	(select like_count from feedlike l, mainfeed f where f.feed_idx=l.feed_idx and l.feed_idx=#{feedIdx} and l.like_type=1) as 'like_count',
	(select like_count from feedlike l, mainfeed f where f.feed_idx=l.feed_idx and l.feed_idx=#{feedIdx}  and l.like_type=2 ) as 'cheerup_count',
	(select like_count from feedlike l, mainfeed f where f.feed_idx=l.feed_idx and l.feed_idx=#{feedIdx}  and l.like_type=3) as 'sad_count'
	from mainfeed f ,mainuser u
	where  f.is_deleted!=1 and f.feed_idx=#{feedIdx} and f.user_idx=u.user_idx ;
	</select>
	
	
	
	<!-- 이웃의 게시글 리스트 -->
	<select id ="neighborFeed" parameterType="int" resultMap="com.ssafy.resultmaps.neighbor">
	   select f.feed_idx, c.comment_count, l.like_total_count 
   		from (select m.feed_idx
   		from mainfeed m, (select  distinct  target_user_idx from userfollowing where userfollowing.user_idx=#{userIdx} ) f  
   		where f.target_user_idx = m.user_idx and m.is_deleted !=1 and m.is_public !=0) f 
      	left join 
      	(select feed_idx, count(*) as comment_count 
     	 from feedcomment 
     	 where is_deleted = 0 
     	group by feed_idx) as c 
      	on f.feed_idx = c.feed_idx 
        left join 
      	(select feed_idx, sum(like_count) as like_total_count 
     	 from feedlike 
     	 where is_deleted = 0 
     	 group by feed_idx) as l 
     	on f.feed_idx = l.feed_idx ;
	</select>

</mapper>
