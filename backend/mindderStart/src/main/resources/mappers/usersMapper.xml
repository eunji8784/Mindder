<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.mindder.users.model.mapper.UsersMapper">
	<select id="login" parameterType="UsersDto" resultMap="com.ssafy.resultmaps.user">
		select *
		from mainuser
		where email = #{email} and password = #{password}
	</select>
	<select id="searchUser" parameterType="String" resultMap="com.ssafy.resultmaps.user">
		select *
		from mainuser
		where email = #{email}
	</select>
	<select id="findpassword" parameterType="int" resultType="String">
		select password
		from mainuser
		where user_idx = #{userIdx}
	</select>
	<select id="checkEmail" parameterType="String" resultType="int">
		select count(email)
		from mainuser
		where email = #{nickname} and is_deleted = 0
	</select>
	<select id="findSocialKakaoID" parameterType="String" resultMap="com.ssafy.resultmaps.user">
		select *
		from mainuser
		where social_id = #{id}
	</select>
	<insert id="joinSocialKakaoID" parameterType="UsersDto" useGeneratedKeys="true" keyColumn="user_idx" keyProperty="userIdx">
		insert into mainuser(email,nickname,password,create_date,emote_color_idx,social_id,find_tag)
		value(#{email},#{nickname},#{password},now(),#{emoteColorIdx},#{socialId},#{findTag})
	</insert>
	<select id="checkNickname" parameterType="String" resultType="int">
		select count(nickname)
		from mainuser
		where nickname =#{nickname}
	</select>
	<insert id="joinUser" parameterType="UsersDto">
		insert into mainuser(email,nickname,password,create_date,emote_color_idx,social_id,find_tag,refresh_token,push_alarm_agree)
		value(#{email},#{nickname},#{password},now(),#{emoteColorIdx},#{socialId},#{findTag},#{refreshToken},#{pushAlarmAgree})
	</insert>
	<update id="addToken" parameterType="UsersDto">
		update mainuser
		set refresh_token = #{refreshToken}
		where user_idx = #{userIdx}
	</update>
	<update id="updateUser" parameterType="UsersDto">
		update mainuser
		set nickname = #{nickname}, emote_color_idx = #{emoteColorIdx}, 
		file_idx = #{fileIdx}, find_tag = #{findTag}, push_alarm_agree = #{pushAlarmAgree}
		where user_idx = #{userIdx}
	</update>
	<update id="changePassword" parameterType="UsersDto">
		update mainuser
		set password=#{password}
		where user_idx = #{userIdx}
	</update>
	<update id="deleteUser" parameterType="int">
		update mainuser 
		set  is_deleted = 1, update_date = now()
		where user_idx = #{userIdx};
		update mainfeed 
		set  is_deleted = 1, update_date = now()
		where user_idx = #{userIdx};
		update feedcomment 
		set  is_deleted = 1, update_date = now()
		where user_idx = #{userIdx};
	</update>
	<delete id="deletedHard" parameterType="int">
		delete from feedlike where user_idx =#{userIdx};
		delete from feedscrap where user_idx =#{userIdx};
	</delete>
	<update id="logout" parameterType="int">
		update mainuser
		set refresh_token=null
		where user_idx = #{userIdx}
	</update>
	<select id="selectUserIdx" parameterType="String" resultType="String">
		select user_idx
		from mainuser
		where email = #{email}
	</select>
	<update id="deletedJoinUser" parameterType="UsersDto">
		update mainuser
		set email = #{email},nickname=#{nickname},password=#{password},create_date = now(),emote_color_idx = #{emoteColorIdx},social_id = #{socialId},is_deleted = 0, update_date = now()
		where user_idx = #{userIdx}
	</update>
</mapper>
